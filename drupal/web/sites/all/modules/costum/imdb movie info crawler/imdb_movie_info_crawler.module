<?php

/**
 * @file
 * This module crawls Imdb movie pages and displays the movie title, picture and movie plot. 
 */

/**
 * Implements hook_menu().
 */
function imdb_movie_info_crawler_menu() {
    $items['Imdb_Crawler'] = array(
      'title' => 'Imdb crawler',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('imdb_movie_info_crawler_form'),
      'access callback' => TRUE,
      'type' => MENU_NORMAL_ITEM,
    );
    $items['Movie_Info'] = array(
      'title' => 'Movie Info',
      'page callback' => 'movie_info_page_callback',
      'access callback' => TRUE,
      'type' => MENU_LOCAL_TASK,
    );
    return $items;
}

/**
 * Page callback for Imdb_Crawler path.
 */
function imdb_movie_info_crawler_form($form, &$form_state) {
    $form['movie_url'] = array(
      '#title' => t('Enter Imdb movie link'),
      '#type' => 'textfield',
      '#description' => 'Enter the imdb movie link here',
      '#size' => 32,
      '#maxlength' => 128,
      '#required' => TRUE,
    );
    $form['submit_button'] = array(
      '#type' => 'submit',
      '#value' => t('Submit!'),
    );
    return $form;
}

/**
 * Implements hook_form_validate().
 */
function imdb_movie_info_crawler_form_validate($form, &$form_state) {
    $submitted_url = $form_state['values']['movie_url'];
    $string_pattern_url = "'http://www.imdb.com/title/tt'si";
    $valid_url = preg_match($string_pattern_url, $submitted_url);
    if (!$valid_url) {
        drupal_set_message("Please enter a valid url!");
        $form_state['rebuild'] = TRUE;
    }
}

/**
 * Implements hook_form_submit().
 */
function imdb_movie_info_crawler_form_submit($form, &$form_state) {
    $movie_infos = get_imdb_movie_infos($form_state['values']['movie_url']);
    $_SESSION['movie_infos'] = $movie_infos;
    drupal_goto("Movie_Info");
}

/**
 * Page callback for Movie_Info path.
 */
function movie_info_page_callback() {
    $movie_infos = array(
      'title' => $_SESSION['movie_infos']['title'],
      'posterlink' => $_SESSION['movie_infos']['posterlink'],
      'postersrc' => $_SESSION['movie_infos']['postersrc'],
      'plot' => $_SESSION['movie_infos']['plot'],
    );
    $page['Movie_Info'] = [
      '#theme' => 'show_movie_infos',
      '#infos' => $movie_infos
    ];
    return $page;
}

/**
 * Implements hook_theme(). 
 */
function imdb_movie_info_crawler_theme() {
    return array(
      'show_movie_infos' => array(
        'variables' => array('infos' => []),
        'template' => 'templates/movie_infos',
      ),
    );
}

/**
 * Returns movie title, link to the posterlink, the source of the poster image and the movie plot.
 *
 * @params string $url
 *   The movie url of an imdb movie page
 */
function get_imdb_movie_infos($url) {
    @$homepage = file_get_contents($url);

    //extracts movie title from page
    $string_pattern_title = "'<meta name=\"title\" content=\"(.*?)\" />'si";
    preg_match($string_pattern_title, $homepage, $titleimdb);
    $string_pattern_title2 = "'(.*?)- IMDb'si";
    preg_match($string_pattern_title2, $titleimdb[1], $title);

    //exracts the poster link and its image-source from page
    $string_pattern_poster_html = "'<div class=\"poster\">(.*?)</div>'si";
    preg_match($string_pattern_poster_html, $homepage, $regextextposter);
    $string_pattern_poster_link = "'href=\"(.*?)\"'si";
    preg_match($string_pattern_poster_link, $regextextposter[0], $posterlink);
    $string_pattern_poster_src = "'src=\"(.*?)\"'si";
    preg_match($string_pattern_poster_src, $regextextposter[0], $postersrc);

    //extracts movie plot text
    $string_pattern_summary_text = "'<div class=\"summary_text\" itemprop=\"description\">(.*?)</div>'si";
    preg_match($string_pattern_summary_text, $homepage, $summary_text);
    @$movie_infos = array(
      "title" => $title[1],
      "posterlink" => "http://www.imdb.com/" . $posterlink[1],
      "postersrc" => $postersrc[1],
      "plot" => $summary_text[1],
    );
    return $movie_infos;
}
